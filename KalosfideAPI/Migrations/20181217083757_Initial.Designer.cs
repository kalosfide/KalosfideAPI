// <auto-generated />
using System;
using KalosfideAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KalosfideAPI.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20181217083757_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KalosfideAPI.Data.Administrateur", b =>
                {
                    b.Property<string>("Uid")
                        .HasMaxLength(20);

                    b.Property<int>("Rno");

                    b.HasKey("Uid", "Rno");

                    b.ToTable("Administrateurs");
                });

            modelBuilder.Entity("KalosfideAPI.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("KalosfideAPI.Data.Catégorie", b =>
                {
                    b.Property<string>("Uid")
                        .HasMaxLength(20);

                    b.Property<int>("Rno");

                    b.Property<long>("No");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Uid", "Rno", "No");

                    b.HasIndex("Nom")
                        .IsUnique();

                    b.ToTable("Catégories");
                });

            modelBuilder.Entity("KalosfideAPI.Data.Client", b =>
                {
                    b.Property<string>("Uid")
                        .HasMaxLength(20);

                    b.Property<int>("Rno");

                    b.Property<string>("Adresse")
                        .HasMaxLength(500);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Uid", "Rno");

                    b.HasIndex("Nom");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("KalosfideAPI.Data.Commande", b =>
                {
                    b.Property<string>("Uid")
                        .HasMaxLength(20);

                    b.Property<int>("Rno");

                    b.Property<long>("No");

                    b.Property<DateTime?>("Date");

                    b.Property<long?>("LivraisonNo");

                    b.Property<int?>("LivraisonRno");

                    b.Property<string>("LivraisonUid")
                        .HasMaxLength(20);

                    b.HasKey("Uid", "Rno", "No");

                    b.HasIndex("LivraisonUid", "LivraisonRno", "LivraisonNo");

                    b.ToTable("Commandes");
                });

            modelBuilder.Entity("KalosfideAPI.Data.DétailCommande", b =>
                {
                    b.Property<string>("Uid")
                        .HasMaxLength(20);

                    b.Property<int>("Rno");

                    b.Property<long>("No");

                    b.Property<string>("Uid2")
                        .HasMaxLength(20);

                    b.Property<int>("Rno2");

                    b.Property<long>("No2");

                    b.Property<decimal>("Demande")
                        .HasColumnType("decimal(5,3)");

                    b.Property<decimal?>("Mesure")
                        .HasColumnType("decimal(5,3)");

                    b.Property<decimal?>("Prix")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("TypeCommande")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.HasKey("Uid", "Rno", "No", "Uid2", "Rno2", "No2");

                    b.HasIndex("Uid2", "Rno2", "No2");

                    b.ToTable("DétailCommandes");
                });

            modelBuilder.Entity("KalosfideAPI.Data.EtatPrix", b =>
                {
                    b.Property<string>("Uid")
                        .HasMaxLength(20);

                    b.Property<int>("Rno");

                    b.Property<long>("No");

                    b.Property<DateTime>("Date");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Uid", "Rno", "No", "Date");

                    b.ToTable("EtatPrix");
                });

            modelBuilder.Entity("KalosfideAPI.Data.EtatRole", b =>
                {
                    b.Property<string>("Uid")
                        .HasMaxLength(20);

                    b.Property<int>("Rno");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Etat")
                        .HasMaxLength(1);

                    b.HasKey("Uid", "Rno", "Date");

                    b.ToTable("EtatRole");
                });

            modelBuilder.Entity("KalosfideAPI.Data.EtatUtilisateur", b =>
                {
                    b.Property<string>("Uid")
                        .HasMaxLength(20);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Etat")
                        .HasMaxLength(1);

                    b.HasKey("Uid", "Date");

                    b.ToTable("EtatsUtilisateur");
                });

            modelBuilder.Entity("KalosfideAPI.Data.Fournisseur", b =>
                {
                    b.Property<string>("Uid")
                        .HasMaxLength(20);

                    b.Property<int>("Rno");

                    b.Property<string>("Adresse")
                        .HasMaxLength(500);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Uid", "Rno");

                    b.HasIndex("Nom");

                    b.ToTable("Fournisseurs");
                });

            modelBuilder.Entity("KalosfideAPI.Data.Livraison", b =>
                {
                    b.Property<string>("Uid")
                        .HasMaxLength(20);

                    b.Property<int>("Rno");

                    b.Property<long>("No");

                    b.Property<DateTime>("Date");

                    b.HasKey("Uid", "Rno", "No");

                    b.HasIndex("Date");

                    b.ToTable("Livraisons");
                });

            modelBuilder.Entity("KalosfideAPI.Data.Produit", b =>
                {
                    b.Property<string>("Uid")
                        .HasMaxLength(20);

                    b.Property<int>("Rno");

                    b.Property<long>("No");

                    b.Property<long>("CatégorieNo");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("TypeCommande")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasDefaultValue("1");

                    b.Property<string>("TypeMesure")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasDefaultValue("U");

                    b.HasKey("Uid", "Rno", "No");

                    b.HasIndex("Nom")
                        .IsUnique();

                    b.HasIndex("Uid", "Rno", "CatégorieNo");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("KalosfideAPI.Data.Role", b =>
                {
                    b.Property<string>("Uid")
                        .HasMaxLength(20);

                    b.Property<int>("Rno");

                    b.Property<int>("SiteRno");

                    b.Property<string>("SiteUid")
                        .HasMaxLength(20);

                    b.HasKey("Uid", "Rno");

                    b.HasIndex("SiteUid", "SiteRno");

                    b.HasIndex("Uid", "Rno");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("KalosfideAPI.Data.Site", b =>
                {
                    b.Property<string>("Uid")
                        .HasMaxLength(20);

                    b.Property<int>("Rno");

                    b.Property<string>("NomSite")
                        .HasMaxLength(200);

                    b.Property<bool>("Ouvert");

                    b.Property<string>("Titre")
                        .HasMaxLength(200);

                    b.HasKey("Uid", "Rno");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("KalosfideAPI.Data.Utilisateur", b =>
                {
                    b.Property<string>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20);

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Uid");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("KalosfideAPI.Data.Administrateur", b =>
                {
                    b.HasOne("KalosfideAPI.Data.Role", "Role")
                        .WithOne()
                        .HasForeignKey("KalosfideAPI.Data.Administrateur", "Uid", "Rno")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KalosfideAPI.Data.Catégorie", b =>
                {
                    b.HasOne("KalosfideAPI.Data.Fournisseur", "Producteur")
                        .WithMany("Catégories")
                        .HasForeignKey("Uid", "Rno")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KalosfideAPI.Data.Client", b =>
                {
                    b.HasOne("KalosfideAPI.Data.Role", "Role")
                        .WithOne()
                        .HasForeignKey("KalosfideAPI.Data.Client", "Uid", "Rno")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KalosfideAPI.Data.Commande", b =>
                {
                    b.HasOne("KalosfideAPI.Data.Client", "Client")
                        .WithMany("Commandes")
                        .HasForeignKey("Uid", "Rno")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KalosfideAPI.Data.Livraison", "Livraison")
                        .WithMany("Commandes")
                        .HasForeignKey("LivraisonUid", "LivraisonRno", "LivraisonNo");
                });

            modelBuilder.Entity("KalosfideAPI.Data.DétailCommande", b =>
                {
                    b.HasOne("KalosfideAPI.Data.Commande", "Commande")
                        .WithMany("DétailCommandes")
                        .HasForeignKey("Uid", "Rno", "No")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KalosfideAPI.Data.Produit", "Produit")
                        .WithMany()
                        .HasForeignKey("Uid2", "Rno2", "No2");
                });

            modelBuilder.Entity("KalosfideAPI.Data.EtatPrix", b =>
                {
                    b.HasOne("KalosfideAPI.Data.Produit", "Produit")
                        .WithMany("EtatPrix")
                        .HasForeignKey("Uid", "Rno", "No")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KalosfideAPI.Data.EtatRole", b =>
                {
                    b.HasOne("KalosfideAPI.Data.Role", "Role")
                        .WithMany("Etats")
                        .HasForeignKey("Uid", "Rno")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KalosfideAPI.Data.EtatUtilisateur", b =>
                {
                    b.HasOne("KalosfideAPI.Data.Utilisateur", "Utilisateur")
                        .WithMany("Etats")
                        .HasForeignKey("Uid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KalosfideAPI.Data.Fournisseur", b =>
                {
                    b.HasOne("KalosfideAPI.Data.Role", "Role")
                        .WithOne()
                        .HasForeignKey("KalosfideAPI.Data.Fournisseur", "Uid", "Rno")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KalosfideAPI.Data.Livraison", b =>
                {
                    b.HasOne("KalosfideAPI.Data.Fournisseur", "Livreur")
                        .WithMany("Livraisons")
                        .HasForeignKey("Uid", "Rno")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KalosfideAPI.Data.Produit", b =>
                {
                    b.HasOne("KalosfideAPI.Data.Catégorie", "Catégorie")
                        .WithMany("Produits")
                        .HasForeignKey("Uid", "Rno", "CatégorieNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KalosfideAPI.Data.Role", b =>
                {
                    b.HasOne("KalosfideAPI.Data.Utilisateur", "Utilisateur")
                        .WithMany("Roles")
                        .HasForeignKey("Uid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KalosfideAPI.Data.Site", "Site")
                        .WithMany("Usagers")
                        .HasForeignKey("SiteUid", "SiteRno");
                });

            modelBuilder.Entity("KalosfideAPI.Data.Utilisateur", b =>
                {
                    b.HasOne("KalosfideAPI.Data.ApplicationUser", "ApplicationUser")
                        .WithOne("Utilisateur")
                        .HasForeignKey("KalosfideAPI.Data.Utilisateur", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("KalosfideAPI.Data.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("KalosfideAPI.Data.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KalosfideAPI.Data.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("KalosfideAPI.Data.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
